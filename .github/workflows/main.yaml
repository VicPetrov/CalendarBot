name: Build and Release CalendarBot

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v3

    # Setup Bun
    - name: Install Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: 'latest'

    # Install dependencies
    - name: Install dependencies
      run: bun install

    # Build the Bun application targeting Node.js
    - name: Build CalendarBot (Target Node)
      run: bun build index.ts --target=node --outdir=release/

    # Step 4: Upload the build as an artifact
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: bun-build
        path: release/  # Upload the compiled output directory
    # Setup Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: bun-build
    # Build Docker image
    - name: Build Docker Image
      run: |
        docker build -t VicPetrov/calendarbot:latest .
    
    # Save Docker image as a tar file
    - name: Save Docker Image
      run: docker save VicPetrov/calendarbot:latest -o calendarbot_image.tar

    # Upload Docker image as an artifact
    - name: Upload Docker Image Artifact
      uses: actions/upload-artifact@v3
      with:
        name: calendarbot-docker-image
        path: calendarbot_image.tar

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for interacting with the repository contents
      actions: write
    steps:
    # Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v3

    # Upload Docker image to GitHub releases as an artifact
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.sha }}
        name: Release ${{ github.sha }}
        artifacts: calendarbot-docker-image
